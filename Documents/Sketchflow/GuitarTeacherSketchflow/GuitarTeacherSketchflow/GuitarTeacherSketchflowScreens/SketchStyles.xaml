<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:vsm="clr-namespace:System.Windows;assembly=System.Windows" 
	xmlns:SketchControls="clr-namespace:Microsoft.Expression.Prototyping.SketchControls;assembly=Microsoft.Expression.Prototyping.SketchControls" 
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
	mc:Ignorable="d" 
	xmlns:System="clr-namespace:System;assembly=mscorlib"
	xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls" 
	xmlns:System_Windows_Controls_Primitives="clr-namespace:System.Windows.Controls.Primitives;assembly=System.Windows.Controls" 
	d:IsSketchFlowStyle="True"
	d:IsSketchFlowDefaultStyle="True">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/Microsoft.Expression.Prototyping.SketchControls;component/ScrollViewerStyles.xaml"/>
	</ResourceDictionary.MergedDictionaries>
	
	<SolidColorBrush x:Key="BaseBackground-Sketch" Color="#FFFFFFFF"/>
	<SolidColorBrush x:Key="BaseForeground-Sketch" Color="#FF606060"/>
	<SolidColorBrush x:Key="BaseBorder-Sketch" Color="#FF606060"/>
	<SolidColorBrush x:Key="MouseOverBackground-Sketch" Color="#FFD2D2D2"/>
	<SolidColorBrush x:Key="PressedBackground-Sketch" Color="#FF959595"/>
	<SolidColorBrush x:Key="DisabledBackground-Sketch" Color="#FFD8D8D8"/>
	<SolidColorBrush x:Key="DisabledForeground-Sketch" Color="#FF9F9F9F"/>
	<SolidColorBrush x:Key="FocusedBorder-Sketch" Color="#FF000000"/>
	<SolidColorBrush x:Key="DisabledBorder-Sketch" Color="#FF9F9F9F"/>
	<SolidColorBrush x:Key="SelectedBackground-Sketch" Color="#FFAFAFAF"/>
	<SolidColorBrush x:Key="Hyperlink-Sketch" Color="#FF73A9D8"/>
	<FontFamily x:Key="FontFamily-Sketch">/GuitarTeacherSketchflow.Screens;component/Fonts/Fonts.zip#Buxton Sketch</FontFamily>
	<System:Double x:Key="SizeDouble-Sketch">19</System:Double>
	<FontWeight x:Key="FontWeight-Sketch">Normal</FontWeight>

	<!-- Basic Sketch TextBlock -->
	<Style x:Key="BasicTextBlock-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Basic Text">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>
	
	<!-- Sketch TextBlock -->
	<Style x:Key="TextBlock-Sketch" TargetType="TextBlock" BasedOn="{StaticResource BasicTextBlock-Sketch}" d:StyleDefaultContent="TextBlock"/>	

	<!-- Sketch Rectangle -->
	<Style x:Key="Rectangle-Sketch" TargetType="SketchControls:SketchRectangleSL">
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="SegmentLength" Value="8"/>
		<Setter Property="SegmentOffset" Value="0.12"/>
		<Setter Property="SegmentVariance" Value="0.1"/>
	</Style>
	
	<!-- Sketch Circle -->
	<Style x:Key="Circle-Sketch" TargetType="SketchControls:SketchCircleSL">
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="SegmentLength" Value="8"/>
		<Setter Property="SegmentOffset" Value="0.12"/>
		<Setter Property="SegmentVariance" Value="0.1"/>
	</Style>
	
	<!-- Sketch Button -->
	<Style x:Key="Button-Sketch" TargetType="Button">
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Padding" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Cursor="Hand" Background="#00000000">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<SketchControls:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Foreground="{TemplateBinding Foreground}"/>
						<SketchControls:SketchRectangleSL x:Name="Over" Background="{StaticResource MouseOverBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Visibility="Collapsed"/>
						<SketchControls:SketchRectangleSL x:Name="Pressed1" Background="{StaticResource PressedBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Visibility="Collapsed"/>
						<SketchControls:SketchRectangleSL x:Name="Focus" Background="{x:Null}" BorderBrush="{StaticResource FocusedBorder-Sketch}" StrokeWidth="2" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Visibility="Collapsed"/>
						<SketchControls:SketchRectangleSL x:Name="Disabled1" Background="{StaticResource BaseBackground-Sketch}" Visibility="Collapsed" BorderBrush="{StaticResource DisabledBorder-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>

	<!-- Sketch CheckBox -->
	<Style x:Key="CheckBox-Sketch" TargetType="CheckBox">
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CheckBox">
					<Grid Background="#00000000" Cursor="Hand">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked"/>
								<vsm:VisualState x:Name="Indeterminate">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="16"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid HorizontalAlignment="Left" VerticalAlignment="Top">
							<SketchControls:SketchRectangleSL x:Name="Normal1" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Width="14" Height="14" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="Over" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{StaticResource MouseOverBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Visibility="Collapsed" Width="14" Height="14"/>
							<SketchControls:SketchRectangleSL x:Name="Pressed1" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{StaticResource PressedBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Visibility="Collapsed" Width="14" Height="14"/>
							<SketchControls:SketchRectangleSL x:Name="Focus" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Visibility="Collapsed" BorderBrush="{StaticResource FocusedBorder-Sketch}" Width="14" Height="14" Background="{x:Null}"/>
							<SketchControls:SketchRectangleSL x:Name="Disabled1" SegmentLength="4" SegmentOffset="0.2" SegmentVariance="0.2" Background="{StaticResource BaseBackground-Sketch}" Visibility="Collapsed" BorderBrush="{StaticResource DisabledBorder-Sketch}" Width="14" Height="14"/>
							<Path x:Name="CheckIcon" Fill="{TemplateBinding BorderBrush}" Stretch="Fill" Height="10" Margin="-1,0,0,2" Width="10.5" Data="M102.03442,598.79645 L105.22962,597.78918 L106.78825,600.42358 C106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 C112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 C114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 C110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 z" Visibility="Collapsed"/>
							<Rectangle x:Name="IndeterminateIcon" Fill="{TemplateBinding BorderBrush}" Height="2" Width="6" Opacity="0" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" Grid.Column="1" VerticalAlignment="Top" d:LayoutOverrides="Width" Margin="0,-4,0,0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>
	
	<!-- Sketch ComboBoxItem -->
	<Style x:Key="ComboBoxItem-Sketch" TargetType="ComboBoxItem">
		<Setter Property="Padding" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBoxItem">
					<Grid Margin="5,5,0,5" Background="#01FFFFFF" Cursor="Hand">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SketchRectangleSL" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard/>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="SelectionStates">
								<vsm:VisualState x:Name="Unselected"/>
								<vsm:VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Selected1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<SketchControls:SketchRectangleSL x:Name="SketchRectangleSL" Margin="-3,-2,0,-2" Opacity="0" BorderBrush="{StaticResource MouseOverBackground-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<SketchControls:SketchRectangleSL x:Name="Selected1" Opacity="0" BorderBrush="{StaticResource SelectedBackground-Sketch}" Background="{StaticResource SelectedBackground-Sketch}" Margin="-3,-2,0,-2" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<SketchControls:SketchRectangleSL x:Name="Focus" Opacity="0" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{x:Null}" Margin="-3,-2,0,-2" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<ContentPresenter/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>

	<!-- Sketch HyperLinkButton -->
	<Style x:Key="HyperlinkButton-Sketch" TargetType="HyperlinkButton">
		<Setter Property="Foreground" Value="{StaticResource Hyperlink-Sketch}"/>
		<Setter Property="Padding" Value="2,0,2,0"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="HyperlinkButton">
					<Grid Cursor="{TemplateBinding Cursor}" Background="{TemplateBinding Background}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="UnderlineTextBlock" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="PressedTextBlock" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="DisabledOverlay" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="NormalText" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="SketchRectangleSL" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<TextBlock x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Visible" Text="{TemplateBinding Content}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}"/>
						<TextBlock x:Name="UnderlineTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" TextDecorations="Underline" Foreground="{StaticResource Hyperlink-Sketch}" FontFamily="{TemplateBinding FontFamily}"/>
						<TextBlock x:Name="PressedTextBlock" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Text="{TemplateBinding Content}" TextDecorations="Underline" Foreground="{StaticResource FocusedBorder-Sketch}" FontFamily="{TemplateBinding FontFamily}"/>
						<TextBlock x:Name="DisabledOverlay" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Canvas.ZIndex="1" Visibility="Collapsed" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{StaticResource DisabledBackground-Sketch}" Text="{TemplateBinding Content}" FontFamily="{TemplateBinding FontFamily}"/>
						<SketchControls:SketchRectangleSL x:Name="SketchRectangleSL" Background="{x:Null}" BorderBrush="{StaticResource FocusedBorder-Sketch}" Opacity="0" Margin="-2,0,2,2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>

	<!-- Sketch ListBoxItem -->
	<Style x:Key="ListBoxItem-Sketch" TargetType="ListBoxItem">
		<Setter Property="Padding" Value="3"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Local"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<Grid Background="{TemplateBinding Background}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="SelectionStates">
								<vsm:VisualState x:Name="Unselected"/>
								<vsm:VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Selected1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<SketchControls:SketchRectangleSL x:Name="Over" Opacity="0" BorderBrush="{StaticResource MouseOverBackground-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<SketchControls:SketchRectangleSL x:Name="Selected1" Opacity="0" BorderBrush="{StaticResource SelectedBackground-Sketch}" Background="{StaticResource SelectedBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<SketchControls:SketchRectangleSL x:Name="Focus" Opacity="0" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{x:Null}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
						<ContentPresenter x:Name="contentPresenter"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="Margin" Value="5,4,0,0"/>
	</Style>

	<!-- Sketch PasswordBox -->
	<Style x:Key="PasswordBox-Sketch" TargetType="PasswordBox">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="PasswordBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused">
									<Storyboard/>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="Border" Opacity="1" Background="#00000000">
							<SketchControls:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Visibility="Collapsed"/>
							<SketchControls:SketchRectangleSL x:Name="Focus" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Visibility="Collapsed"/>
							<SketchControls:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Background="{StaticResource BaseBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Visibility="Collapsed"/>
							<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
								<Border x:Name="ContentElement" Margin="2,2,2,2" VerticalAlignment="Center"/>
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>
	
	<!-- Sketch ValidationToolTip ControlTemplate -->
	<ControlTemplate x:Key="ValidationToolTipTemplate-Sketch">
		<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<Grid.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25"/>
			</Grid.RenderTransform>
			<vsm:VisualStateManager.VisualStateGroups>
				<vsm:VisualStateGroup x:Name="OpenStates">
					<vsm:VisualStateGroup.Transitions>
						<vsm:VisualTransition GeneratedDuration="0"/>
						<vsm:VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
								</DoubleAnimationUsingKeyFrames>
								<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
									<SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
								</DoubleAnimationUsingKeyFrames>
							</Storyboard>
						</vsm:VisualTransition>
					</vsm:VisualStateGroup.Transitions>
					<vsm:VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</vsm:VisualState>
					<vsm:VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="xform" Storyboard.TargetProperty="X">
								<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
								<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</vsm:VisualState>
				</vsm:VisualStateGroup>
			</vsm:VisualStateManager.VisualStateGroups>
			<Border Margin="4,4,-4,-4" Background="#152A2E31" CornerRadius="4"/>
			<Border Margin="3,3,-3,-3" Background="#252A2E31" CornerRadius="4"/>
			<Border Margin="2,2,-2,-2" Background="#352A2E31" CornerRadius="4"/>
			<Border Margin="1,1,-1,-1" Background="#452A2E31" CornerRadius="4"/>
			<Border Background="#FFDC000C" CornerRadius="4"/>
			<Border CornerRadius="4">
				<Border.Background>
					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
						<GradientStop Color="#66FFFFFF"/>
						<GradientStop Color="#66000000" Offset="1"/>
						<GradientStop Color="#00E5E5E5" Offset="0.1"/>
						<GradientStop Color="#00161616" Offset="0.9"/>
					</LinearGradientBrush>
				</Border.Background>
				<TextBlock Margin="8,3,8,4" MaxWidth="250" UseLayoutRounding="false" Foreground="White" Text="{Binding Path=(Validation.Errors)[0].Exception.Message}" TextWrapping="Wrap"/>
			</Border>
		</Grid>
	</ControlTemplate>
	
	<!-- Sketch Note -->
	<Style x:Key="Note-Sketch" TargetType="TextBox" d:StyleDefaultContent="Note" d:ExplicitWidth="200" d:ExplicitHeight="180">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="#FFFFFFFF"/>
		<Setter Property="Foreground" Value="#FF5B5B5B"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimationUsingKeyFrames Storyboard.TargetName="MouseOverBorder" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)">
											<SplineColorKeyFrame KeyTime="0" Value="#FF99C1E2"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)">
											<EasingColorKeyFrame KeyTime="00:00:00" Value="#00F7F7F7"/>
										</ColorAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="ValidationStates">
								<vsm:VisualState x:Name="Valid"/>
								<vsm:VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ValidationErrorElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsOpen">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Rectangle Stroke="{x:Null}" RadiusX="1" RadiusY="1">
							<Rectangle.Effect>
								<DropShadowEffect BlurRadius="10" Opacity="0.3"/>
							</Rectangle.Effect>
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.66,0.777" StartPoint="0.34,0.223">
									<GradientStop Color="#FFEBE380"/>
									<GradientStop Color="#FFFDF47B" Offset="1"/>
								</LinearGradientBrush>
							</Rectangle.Fill>
						</Rectangle>
						<Border x:Name="Border" Opacity="1" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1">
							<Grid Margin="10,10,10,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
								<Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#72F7F7F7"/>
								<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
									<ScrollViewer x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}"/>
								</Border>
							</Grid>
						</Border>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}"/>
						<Border x:Name="FocusVisualElement" Margin="1" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF6DBDD1" BorderThickness="{TemplateBinding BorderThickness}"/>
						<Border x:Name="ValidationErrorElement" Visibility="Collapsed" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1">
							<ToolTipService.ToolTip>
								<ToolTip x:Name="validationTooltip" Template="{StaticResource ValidationToolTipTemplate-Sketch}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetName="validationTooltip" Storyboard.TargetProperty="IsHitTestVisible">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>true</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Height="12" HorizontalAlignment="Right" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12" Background="Transparent">
								<Path Fill="#FFDC000C" Margin="1,3,0,0" Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"/>
								<Path Fill="#ffffff" Margin="1,3,0,0" Data="M 0,0 L2,0 L 8,6 L8,8"/>
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="21"/>
		<Setter Property="IsReadOnly" Value="True"/>
	</Style>

	<!-- Sketch ProgressBar -->
	<Style x:Key="ProgressBar-Sketch" TargetType="ProgressBar">
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Maximum" Value="100"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ProgressBar">
					<Grid x:Name="Root" Background="{TemplateBinding Background}">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Determinate"/>
								<vsm:VisualState x:Name="Indeterminate">
									<Storyboard RepeatBehavior="Forever">
										<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="IndeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Duration="00:00:00" Storyboard.TargetName="DeterminateRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="IndeterminateGradientFill" Storyboard.TargetProperty="(Shape.OpacityMask).(LinearGradientBrush.Transform).(TransformGroup.Children)[0].X">
											<SplineDoubleKeyFrame KeyTime="0" Value="0"/>
											<SplineDoubleKeyFrame KeyTime="00:00:.5" Value="20"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="ProgressBarTrack" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3"/>
						<Grid x:Name="ProgressBarRootGrid">
							<Rectangle x:Name="ProgressBarRootGradient" Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="1.5" RadiusY="1.5" Margin="{TemplateBinding BorderThickness}" Canvas.ZIndex="1" Visibility="Collapsed">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
										<GradientStop Color="#B2FFFFFF" Offset="0"/>
										<GradientStop Color="#C6FFFFFF" Offset="0.15"/>
										<GradientStop Color="#D1FFFFFF" Offset="0.275"/>
										<GradientStop Color="#C6FFFFFF" Offset="0.4"/>
										<GradientStop Color="#BFFFFFFF" Offset="0.65"/>
										<GradientStop Color="#A5FFFFFF" Offset="0.75"/>
										<GradientStop Color="#91FFFFFF" Offset="0.85"/>
										<GradientStop Color="#72FFFFFF" Offset="1"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Grid x:Name="IndeterminateRoot" Visibility="Collapsed" Margin="2">
								<Rectangle x:Name="IndeterminateSolidFill" StrokeThickness="0" RadiusX="2" RadiusY="2" Margin="{TemplateBinding BorderThickness}" Opacity="1" RenderTransformOrigin="0.5,0.5" Fill="{StaticResource FocusedBorder-Sketch}" Stroke="{StaticResource FocusedBorder-Sketch}" Visibility="Collapsed"/>
								<Rectangle x:Name="IndeterminateGradientFill" StrokeThickness="1" RadiusX="2" RadiusY="2" Margin="0,-1,0,-1" Fill="{TemplateBinding Foreground}">
									<Rectangle.OpacityMask>
										<LinearGradientBrush EndPoint="0,1" StartPoint="20,1" MappingMode="Absolute" SpreadMethod="Repeat">
											<LinearGradientBrush.Transform>
												<TransformGroup>
													<TranslateTransform X="0"/>
													<SkewTransform AngleX="-30"/>
												</TransformGroup>
											</LinearGradientBrush.Transform>
											<GradientStop Color="#FF000000" Offset="0.237"/>
											<GradientStop Offset=".25"/>
											<GradientStop Offset="0.677" Color="#FF000000"/>
											<GradientStop Offset="0.655"/>
										</LinearGradientBrush>
									</Rectangle.OpacityMask>
								</Rectangle>
							</Grid>
							<Grid x:Name="DeterminateRoot" Margin="1">
								<Rectangle x:Name="ProgressBarIndicator" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Left"/>
							</Grid>
						</Grid>
						<SketchControls:SketchRectangleSL BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Background="{x:Null}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Sketch RadioButton -->
	<Style x:Key="RadioButton-Sketch" TargetType="RadioButton">
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Padding" Value="4,1,0,0"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RadioButton">
					<Grid Background="#00000000" Cursor="Hand">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="17.333"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="Normal"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled2" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.6"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="CheckStates">
								<vsm:VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="CheckIcon" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unchecked"/>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Column="0" Margin="0,3,0,0">
							<Ellipse x:Name="NormalBg" Fill="{TemplateBinding Background}" Height="12" Margin="-6,-2,0,0" Width="12"/>
							<Ellipse x:Name="Over" Fill="{StaticResource MouseOverBackground-Sketch}" Stroke="{x:Null}" Height="12" Width="12" Margin="-5,-3,0,0" Opacity="0"/>
							<Ellipse x:Name="Pressed1" Fill="{StaticResource PressedBackground-Sketch}" Stroke="{x:Null}" Height="12" Width="12" Opacity="0" Margin="-5,-2,0,0"/>
							<SketchControls:SketchCircleSL x:Name="Normal1" Height="14" HorizontalAlignment="Left" Width="14" Margin="0,0,0,0" Segments="8" SegmentLength="1.2" SegmentOffset="0.2" SegmentVariance="0.1" BorderBrush="{TemplateBinding BorderBrush}" Background="{x:Null}"/>
							<SketchControls:SketchCircleSL x:Name="Focus1" Height="14" HorizontalAlignment="Left" Width="14" Margin="0,0,0,0" Segments="8" SegmentLength="2" SegmentOffset="0.5" BorderBrush="{StaticResource FocusedBorder-Sketch}" Opacity="0" Background="{x:Null}"/>
							<SketchControls:SketchCircleSL x:Name="Disabled2" Height="14" HorizontalAlignment="Left" Width="14" Margin="0,0,0,0" Segments="8" SegmentLength="1.2" SegmentOffset="0.2" SegmentVariance="0.1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Visibility="Collapsed"/>
							<Ellipse x:Name="Disabled1" Fill="{StaticResource DisabledBackground-Sketch}" Stroke="{x:Null}" Height="12" Width="12" Margin="-5,-2,0,0" Visibility="Collapsed"/>
							<Ellipse x:Name="CheckIcon" Fill="{TemplateBinding BorderBrush}" Height="6" Width="6" HorizontalAlignment="Left" Margin="3,-2,0,0" Visibility="Collapsed"/>
						</Grid>
						<ContentPresenter x:Name="contentPresenter" Grid.ColumnSpan="2" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="0,-2,0,0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
	</Style>
	
	<!-- Sketch ScrollBar -->
	<Style x:Key="ScrollBar-Sketch" TargetType="ScrollBar">
		<Setter Property="MinWidth" Value="17"/>
		<Setter Property="MinHeight" Value="17"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollBar">
					<Grid x:Name="Root">
						<Grid.Resources>
							<ControlTemplate x:Key="RepeatButtonTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="Transparent">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualState x:Name="Normal"/>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Background" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledElement" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value=".7"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Rectangle x:Name="Background" Fill="#FF1F3B53" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0">
										<Rectangle.Stroke>
											<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
												<GradientStop Color="#FF647480" Offset="1"/>
												<GradientStop Color="#FFAEB7BF" Offset="0"/>
												<GradientStop Color="#FF919EA7" Offset="0.35"/>
												<GradientStop Color="#FF7A8A99" Offset="0.35"/>
											</LinearGradientBrush>
										</Rectangle.Stroke>
									</Rectangle>
									<Rectangle x:Name="BackgroundAnimation" Fill="#FF448DCA" Stroke="#00000000" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0"/>
									<Rectangle x:Name="BackgroundGradient" Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="1" RadiusY="1" Margin="1" Opacity="0">
										<Rectangle.Fill>
											<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
												<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
												<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
												<GradientStop Color="#E5FFFFFF" Offset="0.603"/>
												<GradientStop Color="#C6FFFFFF" Offset="1"/>
											</LinearGradientBrush>
										</Rectangle.Fill>
									</Rectangle>
									<Rectangle x:Name="Highlight" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="1" RadiusY="1" Margin="1" IsHitTestVisible="false" Opacity="0"/>
									<Path Stretch="Uniform" Height="8" Width="4" Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z ">
										<Path.Fill>
											<SolidColorBrush x:Name="ButtonColor" Color="#FF333333"/>
										</Path.Fill>
									</Path>
									<Rectangle x:Name="DisabledElement" Fill="#FFFFFFFF" RadiusX="2" RadiusY="2" Opacity="0"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="#00000000">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.995"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowNormal" Storyboard.TargetProperty="(UIElement.Visibility)">
														<DiscreteObjectKeyFrame KeyTime="00:00:00">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowPressed" Storyboard.TargetProperty="(UIElement.Visibility)">
														<DiscreteObjectKeyFrame KeyTime="00:00:00">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Visible</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<SketchControls:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="4" Foreground="{TemplateBinding Foreground}"/>
									<SketchControls:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="4" Opacity="0"/>
									<SketchControls:SketchRectangleSL x:Name="Pressed1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource BaseBorder-Sketch}" Opacity="0" SegmentLength="4"/>
									<SketchControls:SketchRectangleSL x:Name="arrowNormal" Height="6.664" Width="6.663" Clip="M-0.30676755,-0.77817303 L7.7071085,7.235702 L11.242641,3.7001693 L3.228765,-4.3137093 z" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" SegmentLength="5" SegmentOffset="0.2" d:LayoutRounding="Auto" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Margin="5,0,0,0">
										<SketchControls:SketchRectangleSL.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="-135"/>
												<TranslateTransform/>
											</TransformGroup>
										</SketchControls:SketchRectangleSL.RenderTransform>
									</SketchControls:SketchRectangleSL>
									<SketchControls:SketchRectangleSL x:Name="arrowPressed" Height="6.664" Width="6.663" Clip="M-0.30676755,-0.77817303 L7.7071085,7.235702 L11.242641,3.7001693 L3.228765,-4.3137093 z" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" SegmentLength="5" SegmentOffset="0.2" d:LayoutRounding="Auto" BorderBrush="{StaticResource PressedBackground-Sketch}" Background="{x:Null}" Visibility="Collapsed" Margin="5,0,0,0">
										<SketchControls:SketchRectangleSL.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="-135"/>
												<TranslateTransform/>
											</TransformGroup>
										</SketchControls:SketchRectangleSL.RenderTransform>
									</SketchControls:SketchRectangleSL>
									<SketchControls:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBackground-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" Opacity="0" SegmentLength="4"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalIncrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="#00000000">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver"/>
											<vsm:VisualState x:Name="Pressed"/>
											<vsm:VisualState x:Name="Disabled"/>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<SketchControls:SketchRectangleSL Background="{x:Null}" Height="6.664" Width="6.663" Clip="M-3.8423018,2.7573609 L4.1715765,10.771238 L7.1178489,7.8249569 L-0.89602482,-0.1889195 z" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" SegmentLength="5" SegmentOffset="0.2" d:LayoutRounding="Auto" Margin="0,-5,0,0">
										<SketchControls:SketchRectangleSL.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="-45"/>
												<TranslateTransform/>
											</TransformGroup>
										</SketchControls:SketchRectangleSL.RenderTransform>
									</SketchControls:SketchRectangleSL>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalDecrementTemplate" TargetType="RepeatButton">
								<Grid x:Name="Root" Background="#00000000">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.995"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowNormal" Storyboard.TargetProperty="(UIElement.Visibility)">
														<DiscreteObjectKeyFrame KeyTime="00:00:00">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Collapsed</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="arrowPressed" Storyboard.TargetProperty="(UIElement.Visibility)">
														<DiscreteObjectKeyFrame KeyTime="00:00:00">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Visible</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<SketchControls:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="4" Foreground="{TemplateBinding Foreground}"/>
									<SketchControls:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" SegmentLength="4" Opacity="0"/>
									<SketchControls:SketchRectangleSL x:Name="Pressed1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource BaseBorder-Sketch}" Opacity="0" SegmentLength="4"/>
									<SketchControls:SketchRectangleSL x:Name="arrowNormal" Height="6.664" Width="6.663" Clip="M-0.30676755,-0.77817303 L7.7071085,7.235702 L11.242641,3.7001693 L3.228765,-4.3137093 z" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" SegmentLength="5" SegmentOffset="0.2" d:LayoutRounding="Auto" Margin="0,5,0,0" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}">
										<SketchControls:SketchRectangleSL.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="-45"/>
												<TranslateTransform/>
											</TransformGroup>
										</SketchControls:SketchRectangleSL.RenderTransform>
									</SketchControls:SketchRectangleSL>
									<SketchControls:SketchRectangleSL x:Name="arrowPressed" Height="6.664" Width="6.663" Clip="M-0.30676755,-0.77817303 L7.7071085,7.235702 L11.242641,3.7001693 L3.228765,-4.3137093 z" RenderTransformOrigin="0.5,0.5" UseLayoutRounding="False" SegmentLength="5" SegmentOffset="0.2" d:LayoutRounding="Auto" BorderBrush="{StaticResource PressedBackground-Sketch}" Background="{x:Null}" Margin="0,5,0,0" Visibility="Collapsed">
										<SketchControls:SketchRectangleSL.RenderTransform>
											<TransformGroup>
												<ScaleTransform/>
												<SkewTransform/>
												<RotateTransform Angle="-45"/>
												<TranslateTransform/>
											</TransformGroup>
										</SketchControls:SketchRectangleSL.RenderTransform>
									</SketchControls:SketchRectangleSL>
									<SketchControls:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBackground-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" Opacity="0" SegmentLength="4"/>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="VerticalThumbTemplate" TargetType="Thumb">
								<Grid d:DesignWidth="17.5" d:DesignHeight="17.5" Background="#00000000" Cursor="Hand">
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualStateGroup.Transitions>
												<vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
												<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
												<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
											</vsm:VisualStateGroup.Transitions>
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.995"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
														<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
													<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Visibility)">
														<DiscreteObjectKeyFrame KeyTime="00:00:00">
															<DiscreteObjectKeyFrame.Value>
																<Visibility>Visible</Visibility>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="1,0,1,0" Background="#00000000">
										<SketchControls:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1" Foreground="{TemplateBinding Foreground}"/>
										<SketchControls:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1"/>
										<SketchControls:SketchRectangleSL x:Name="Pressed1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource BaseBorder-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1"/>
										<SketchControls:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBackground-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" Visibility="Collapsed" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Margin="0,0,-1,-1"/>
									</Grid>
								</Grid>
							</ControlTemplate>
							<ControlTemplate x:Key="HorizontalThumbTemplate" TargetType="Thumb">
								<Grid>
									<vsm:VisualStateManager.VisualStateGroups>
										<vsm:VisualStateGroup x:Name="CommonStates">
											<vsm:VisualState x:Name="Normal"/>
											<vsm:VisualState x:Name="MouseOver">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundMouseOver" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Pressed">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundPressed" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
														<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
													</DoubleAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
													</ColorAnimationUsingKeyFrames>
													<ColorAnimationUsingKeyFrames Storyboard.TargetName="BackgroundGradient" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
														<SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
													</ColorAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
											<vsm:VisualState x:Name="Disabled">
												<Storyboard>
													<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ThumbVisual" Storyboard.TargetProperty="Opacity">
														<SplineDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
													</DoubleAnimationUsingKeyFrames>
												</Storyboard>
											</vsm:VisualState>
										</vsm:VisualStateGroup>
									</vsm:VisualStateManager.VisualStateGroups>
									<Grid x:Name="ThumbVisual" Margin="0,1,0,1">
										<Rectangle x:Name="Background" Fill="#FF1F3B53" StrokeThickness="1" RadiusX="2" RadiusY="2">
											<Rectangle.Stroke>
												<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
													<GradientStop Color="#FF818F99" Offset="1"/>
													<GradientStop Color="#FFC2C9CE" Offset="0"/>
													<GradientStop Color="#FFB3BBC1" Offset="0.35"/>
													<GradientStop Color="#FF96A4B1" Offset="0.35"/>
												</LinearGradientBrush>
											</Rectangle.Stroke>
										</Rectangle>
										<Rectangle x:Name="BackgroundMouseOver" Fill="#FF448DCA" Stroke="#00000000" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0"/>
										<Rectangle x:Name="BackgroundPressed" Fill="#FF448DCA" Stroke="#00000000" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="0"/>
										<Rectangle x:Name="BackgroundGradient" Stroke="#FFFFFFFF" StrokeThickness="1" RadiusX="1" RadiusY="1" Margin="1">
											<Rectangle.Fill>
												<LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
													<GradientStop Color="#FFFFFFFF" Offset="0.013"/>
													<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
													<GradientStop Color="#E5FFFFFF" Offset="0.603"/>
													<GradientStop Color="#C6FFFFFF" Offset="1"/>
												</LinearGradientBrush>
											</Rectangle.Fill>
										</Rectangle>
										<Rectangle x:Name="Highlight" Stroke="#FF6DBDD1" StrokeThickness="1" RadiusX="1" RadiusY="1" Margin="1" IsHitTestVisible="false" Opacity="0"/>
									</Grid>
								</Grid>
							</ControlTemplate>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalRoot">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<RepeatButton x:Name="HorizontalSmallDecrease" IsTabStop="False" Template="{StaticResource HorizontalDecrementTemplate}" Interval="50" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Width="16"/>
							<RepeatButton x:Name="HorizontalLargeDecrease" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="1" Interval="50" Width="0"/>
							<Thumb x:Name="HorizontalThumb" Background="{TemplateBinding Background}" Template="{StaticResource VerticalThumbTemplate}" MinWidth="18" Width="18" Grid.Column="2" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<RepeatButton x:Name="HorizontalLargeIncrease" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="3" Interval="50"/>
							<RepeatButton x:Name="HorizontalSmallIncrease" IsTabStop="False" Template="{StaticResource HorizontalDecrementTemplate}" Grid.Column="4" Interval="50" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Width="16">
								<RepeatButton.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleX="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</RepeatButton.RenderTransform>
							</RepeatButton>
						</Grid>
						<Grid x:Name="VerticalRoot" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<RepeatButton x:Name="VerticalSmallDecrease" IsTabStop="False" Template="{StaticResource VerticalDecrementTemplate}" Height="16" Grid.Row="0" Interval="50" Cursor="Hand" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<RepeatButton x:Name="VerticalLargeDecrease" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Height="0" Grid.Row="1" Interval="50"/>
							<Thumb x:Name="VerticalThumb" Template="{StaticResource VerticalThumbTemplate}" Height="18" MinHeight="18" Grid.Row="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<RepeatButton x:Name="VerticalLargeIncrease" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="3" Interval="50"/>
							<RepeatButton x:Name="VerticalSmallIncrease" IsTabStop="False" Template="{StaticResource VerticalDecrementTemplate}" Height="16" Grid.Row="4" Interval="50" Cursor="Hand" RenderTransformOrigin="0.5,0.5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}">
								<RepeatButton.RenderTransform>
									<TransformGroup>
										<ScaleTransform ScaleY="-1"/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</RepeatButton.RenderTransform>
							</RepeatButton>
						</Grid>
						<SketchControls:SketchRectangleSL SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>

	<!-- Basic Sketch ScrollViewer -->
	<Style x:Key="ScrollViewer-Sketch" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template" Value="{StaticResource ScrollViewer-SketchTemplate2}"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
	</Style>

	<!-- Sketch ScrollViewer -->
	<Style x:Key="ScrollViewer-Sketch-List" TargetType="ScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="VerticalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Padding" Value="4"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ScrollViewer">
					<Grid>
						<Grid Background="{TemplateBinding Background}">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<SketchControls:SketchRectangleSL SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Grid.ColumnSpan="2" Grid.RowSpan="2"/>
							<ScrollContentPresenter x:Name="ScrollContentPresenter" Cursor="{TemplateBinding Cursor}" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
							<Rectangle Fill="{x:Null}" Grid.Column="1" Grid.Row="1"/>
							<ScrollBar x:Name="VerticalScrollBar" IsTabStop="False" Width="18" Grid.Column="1" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{TemplateBinding VerticalOffset}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Style="{StaticResource ScrollBar-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Foreground="{StaticResource BaseForeground-Sketch}" Background="{StaticResource BaseBackground-Sketch}"/>
							<ScrollBar x:Name="HorizontalScrollBar" IsTabStop="False" Height="18" Grid.Column="0" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{TemplateBinding HorizontalOffset}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Style="{StaticResource ScrollBar-Sketch}" Background="{StaticResource BaseBackground-Sketch}" BorderBrush="{StaticResource BaseBorder-Sketch}" Foreground="{StaticResource BaseForeground-Sketch}"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
	</Style>
	
	<!-- Sketch ListBox-->
	<Style x:Key="ListBox-Sketch" TargetType="ListBox">
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Foreground" Value="#FF000000"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ListBoxItem-Sketch}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBox">
					<Grid>
						<ScrollViewer x:Name="ScrollViewer" Style="{StaticResource ScrollViewer-Sketch2}" 
							ScrollViewer.HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
							ScrollViewer.VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="0" 
							Padding="{TemplateBinding Padding}" 
							Background="{TemplateBinding Background}" 
							Foreground="{TemplateBinding Foreground}">
								<ItemsPresenter/>
						</ScrollViewer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid>
						<TextBlock FontFamily="{StaticResource FontFamily-Sketch}" FontSize="18.666666666666664" Text="{Binding Mode=OneWay}" TextWrapping="Wrap"/>
					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Sketch ComboBox -->
	<Style x:Key="ComboBox-Sketch" TargetType="ComboBox">
		<Setter Property="Padding" Value="6,2,25,2"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="TabNavigation" Value="Once"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItem-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ComboBox">
					<Grid Background="#00000000" MinHeight="29">
						<Grid.Resources>
							<Style x:Name="comboToggleStyle" TargetType="ToggleButton">
								<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
								<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
								<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
								<Setter Property="BorderThickness" Value="1"/>
								<Setter Property="Padding" Value="3"/>
								<Setter Property="Template">
									<Setter.Value>
										<ControlTemplate TargetType="ToggleButton">
											<Grid Cursor="Hand">
												<vsm:VisualStateManager.VisualStateGroups>
													<vsm:VisualStateGroup x:Name="CommonStates">
														<vsm:VisualStateGroup.Transitions>
															<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
															<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
														</vsm:VisualStateGroup.Transitions>
														<vsm:VisualState x:Name="Normal"/>
														<vsm:VisualState x:Name="MouseOver">
															<Storyboard>
																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Pressed">
															<Storyboard>
																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
																</DoubleAnimationUsingKeyFrames>
																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Disabled"/>
													</vsm:VisualStateGroup>
													<vsm:VisualStateGroup x:Name="CheckStates">
														<vsm:VisualState x:Name="Checked">
															<Storyboard/>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Unchecked"/>
													</vsm:VisualStateGroup>
													<vsm:VisualStateGroup x:Name="FocusStates">
														<vsm:VisualState x:Name="Focused">
															<Storyboard>
																<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1_Copy" Storyboard.TargetProperty="(UIElement.Opacity)">
																	<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.995"/>
																</DoubleAnimationUsingKeyFrames>
															</Storyboard>
														</vsm:VisualState>
														<vsm:VisualState x:Name="Unfocused"/>
													</vsm:VisualStateGroup>
												</vsm:VisualStateManager.VisualStateGroups>
												<SketchControls:SketchRectangleSL x:Name="Normal1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Foreground="{TemplateBinding Foreground}"/>
												<SketchControls:SketchRectangleSL x:Name="Over" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0" BorderBrush="{StaticResource BaseBorder-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
												<SketchControls:SketchRectangleSL x:Name="Pressed1" Background="{StaticResource PressedBackground-Sketch}" Opacity="0" BorderBrush="{StaticResource BaseBorder-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
												<SketchControls:SketchRectangleSL x:Name="Pressed1_Copy" Background="{x:Null}" Opacity="0" Foreground="{StaticResource FocusedBorder-Sketch}" BorderBrush="{StaticResource FocusedBorder-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
											</Grid>
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="DropDownToggle" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
								<vsm:VisualState x:Name="FocusedDropDown">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Border x:Name="ContentPresenterBorder">
							<Grid>
								<ToggleButton x:Name="DropDownToggle" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalContentAlignment="Right" HorizontalAlignment="Stretch" Margin="0" Style="{StaticResource comboToggleStyle}" VerticalAlignment="Stretch"/>
								<SketchControls:SketchRectangleSL x:Name="Disabled1" Opacity="0" BorderBrush="{StaticResource DisabledBackground-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
								<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Visible">
									<TextBlock Foreground="{StaticResource BaseForeground-Sketch}" Visibility="Visible"/>
								</ContentPresenter>
								<Path Stretch="Fill" Stroke="{StaticResource BaseBorder-Sketch}" StrokeThickness="2" Height="7" HorizontalAlignment="Right" Margin="0,0,8.167,0" VerticalAlignment="Center" Width="14" UseLayoutRounding="False" Data="M228.5,14.99989 L234.83333,20.5 L241.44333,15.092479"/>
								<SketchControls:SketchRectangleSL x:Name="Focus" Foreground="{StaticResource BaseBackground-Sketch}" Background="{x:Null}" BorderBrush="{StaticResource FocusedBorder-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							</Grid>
						</Border>
						<Popup x:Name="Popup">
							<Grid x:Name="PopupBorder" HorizontalAlignment="Stretch" MaxHeight="200">
								<Grid.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#FFFFFFFF" Offset="0"/>
										<GradientStop Color="#FFFEFEFE" Offset="1"/>
									</LinearGradientBrush>
								</Grid.Background>
								<SketchControls:SketchRectangleSL Background="{x:Null}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
								<ScrollViewer x:Name="ScrollViewer" Style="{StaticResource ScrollViewer-Sketch2}" BorderThickness="0" Padding="1" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Auto">
									<ItemsPresenter/>
								</ScrollViewer>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="MinHeight" Value="29"/>
	</Style>
	
	<!-- Sketch Thumb -->
	<Style x:Key="Thumb-Sketch" TargetType="Thumb" d:IsControlPart="true">
		<Setter Property="Background" Value="#FF1F3B53"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Thumb">
					<Grid d:DesignHeight="19.5" d:DesignWidth="11.333" Background="#00000000" Cursor="Hand">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.2000000"/>
									<vsm:VisualTransition GeneratedDuration="00:00:00" To="Pressed"/>
									<vsm:VisualTransition From="Pressed" GeneratedDuration="00:00:00" To="MouseOver"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Pressed1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualStateGroup.Transitions>
									<vsm:VisualTransition GeneratedDuration="00:00:00.1000000"/>
								</vsm:VisualStateGroup.Transitions>
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused"/>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<SketchControls:SketchRectangleSL x:Name="Normal1" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
						<SketchControls:SketchRectangleSL x:Name="Over" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0"/>
						<SketchControls:SketchRectangleSL x:Name="Pressed1" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource BaseBorder-Sketch}" Opacity="0"/>
						<SketchControls:SketchRectangleSL x:Name="Focus" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{x:Null}" Opacity="0"/>
						<SketchControls:SketchRectangleSL x:Name="Disabled1" SegmentLength="4" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Background="{StaticResource BaseBackground-Sketch}" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<!-- Sketch Slider -->
	<Style x:Key="Slider-Sketch" TargetType="Slider">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Maximum" Value="10"/>
		<Setter Property="Minimum" Value="0"/>
		<Setter Property="Value" Value="0"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Slider">
					<Grid x:Name="Root">
						<Grid.Resources>
							<ControlTemplate x:Key="RepeatButtonTemplate">
								<Grid x:Name="Root" Background="Transparent" Opacity="0"/>
							</ControlTemplate>
						</Grid.Resources>
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver"/>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="TrackRectangle_Disable" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="VerticalDisable" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="TrackRectangle" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="VerticalNormal" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="HorizontalTemplate">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<Rectangle x:Name="TrackRectanglex" Fill="#FFE6EFF7" Stroke="#FFA3AEB9" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="1" RadiusY="1" Height="3" Margin="5,0,5,0" Grid.Column="0" Grid.ColumnSpan="3" Visibility="Collapsed"/>
							<SketchControls:SketchRectangleSL x:Name="TrackRectangle" Background="{TemplateBinding Background}" Grid.Column="0" Height="6" Grid.ColumnSpan="3" Visibility="Visible" SegmentLength="8" SegmentOffset="0.07" SegmentVariance="0.1" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="TrackRectangle_Disable" Height="6" Grid.ColumnSpan="3" Visibility="Collapsed" SegmentLength="8" SegmentOffset="0.07" d:LayoutOverrides="GridBox" Background="{StaticResource BaseBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" SegmentVariance="0.1"/>
							<RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="0"/>
							<Thumb x:Name="HorizontalThumb" IsTabStop="True" Height="18" Width="11" Grid.Column="1" Style="{StaticResource Thumb-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Column="2"/>
						</Grid>
						<Grid x:Name="VerticalTemplate" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<Rectangle Fill="#FFE6EFF7" Stroke="#FFA3AEB9" StrokeThickness="{TemplateBinding BorderThickness}" RadiusX="1" RadiusY="1" Margin="0,5,0,5" Width="3" Grid.Row="0" Grid.RowSpan="3" Visibility="Collapsed"/>
							<SketchControls:SketchRectangleSL x:Name="VerticalNormal" Background="{TemplateBinding Background}" Width="6" Grid.Row="0" Margin="0,5,0,5" Grid.RowSpan="3" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="VerticalDisable" Width="6" Grid.Row="0" Margin="0,5,0,5" Grid.ColumnSpan="1" Grid.RowSpan="3" Background="{StaticResource BaseBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" Visibility="Collapsed" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="2"/>
							<Thumb x:Name="VerticalThumb" IsTabStop="True" Height="11" Width="18" Grid.Row="1" Style="{StaticResource Thumb-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton" IsTabStop="False" Template="{StaticResource RepeatButtonTemplate}" Grid.Row="0"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>

	<!-- Body Center Sketch TextBlock -->
	<Style x:Key="BodyCenter-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Body Text Center">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
	</Style>

	<!-- Body Left Sketch TextBlock -->
	<Style x:Key="BodyLeft-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Body Text Left">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>

	<!-- Body Right Sketch TextBlock -->
	<Style x:Key="BodyRight-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Body Text Right">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Right"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
	</Style>
	
	<!-- Subtitle Center Sketch TextBlock -->
	<Style x:Key="SubtitleCenter-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Subtitle Center">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="23"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
	</Style>
	
	<!-- Subtitle Left Sketch TextBlock -->
	<Style x:Key="SubtitleLeft-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Subtitle Left">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="23"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>

	<!-- Subtitle Right Sketch TextBlock -->
	<Style x:Key="SubtitleRight-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Subtitle Right">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="23"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Right"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
	</Style>

	<!-- Sketch TabItem -->
	<Style x:Key="TabItem-Sketch" TargetType="controls:TabItem" d:IsControlPart="true">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="8,6,8,2"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="MinWidth" Value="5"/>
		<Setter Property="MinHeight" Value="5"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:TabItem">
					<Grid x:Name="Root" d:DesignWidth="63.583" d:DesignHeight="23.5">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle_Copy" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle_Copy1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="rectangle_Copy2" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderTopUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderTopDisabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderTopEnabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderTopDisabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderTopEnabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderTopSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderBottomDisabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderBottomEnabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBottomSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderBottomDisabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderBottomEnabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderBottomUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderLeftDisabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderLeftEnabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderLeftSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderLeftDisabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderLeftEnabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderLeftUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderRightDisabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderRightEnabledSelected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderRightSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderRightDisabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="borderRightEnabledUnselected" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="00:00:00">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Collapsed</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="HeaderRightUnselected" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected"/>
								<VisualState x:Name="Selected"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused"/>
								<VisualState x:Name="Unfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="TemplateTopSelected" Visibility="Collapsed" Canvas.ZIndex="1">
							<SketchControls:SketchRectangleSL x:Name="borderTopEnabledSelected" Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="borderTopDisabledSelected" Style="{StaticResource Rectangle-Sketch}" Visibility="Collapsed" Background="{StaticResource DisabledBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" Margin="2,3,2,-2"/>
							<ContentControl x:Name="HeaderTopSelected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateTopUnselected" Margin="0,1,0,0" Visibility="Collapsed">
							<Rectangle x:Name="rectangle" Fill="{TemplateBinding BorderBrush}" Stroke="{x:Null}" Margin="1" Opacity="0.3"/>
							<SketchControls:SketchRectangleSL x:Name="borderTopEnabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="borderTopDisabledUnselected" Style="{StaticResource Rectangle-Sketch}" Visibility="Collapsed" Background="{StaticResource DisabledBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<ContentControl x:Name="HeaderTopUnselected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateBottomSelected" Visibility="Collapsed" Canvas.ZIndex="1">
							<SketchControls:SketchRectangleSL x:Name="borderBottomEnabledSelected" Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="borderBottomDisabledSelected" Style="{StaticResource Rectangle-Sketch}" Visibility="Collapsed" Background="{StaticResource DisabledBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" Margin="2,-2,2,3"/>
							<ContentControl x:Name="HeaderBottomSelected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateBottomUnselected" Margin="0,-1,0,1" Visibility="Collapsed">
							<Rectangle x:Name="rectangle_Copy2" Fill="{TemplateBinding BorderBrush}" Stroke="{x:Null}" Margin="1,2,1,1" Opacity="0.3"/>
							<SketchControls:SketchRectangleSL x:Name="borderBottomEnabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Margin="0,1,0,0"/>
							<SketchControls:SketchRectangleSL x:Name="borderBottomDisabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" Margin="0,1,0,0" Visibility="Collapsed" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<ContentControl x:Name="HeaderBottomUnselected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateLeftSelected" Visibility="Collapsed" Canvas.ZIndex="1">
							<SketchControls:SketchRectangleSL x:Name="borderLeftEnabledSelected" Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="borderLeftDisabledSelected" Style="{StaticResource Rectangle-Sketch}" Visibility="Collapsed" Background="{StaticResource DisabledBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" Margin="2,2,-2,2"/>
							<ContentControl x:Name="HeaderLeftSelected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateLeftUnselected" Margin="1,0,0,0" Visibility="Collapsed">
							<Rectangle x:Name="rectangle_Copy" Fill="{TemplateBinding BorderBrush}" Stroke="{x:Null}" Margin="1,1,2,1" Opacity="0.3"/>
							<SketchControls:SketchRectangleSL x:Name="borderLeftEnabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Margin="0"/>
							<SketchControls:SketchRectangleSL x:Name="borderLeftDisabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" Margin="0" Visibility="Collapsed" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<ContentControl x:Name="HeaderLeftUnselected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="6,6,6,3" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateRightSelected" Visibility="Collapsed" Canvas.ZIndex="1">
							<SketchControls:SketchRectangleSL x:Name="borderRightEnabledSelected" Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="borderRightDisabledSelected" Style="{StaticResource Rectangle-Sketch}" Visibility="Collapsed" Background="{StaticResource DisabledBackground-Sketch}" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" Margin="-2,2,2,2"/>
							<ContentControl x:Name="HeaderRightSelected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Grid x:Name="TemplateRightUnselected" Margin="0,0,1,0" Visibility="Collapsed">
							<Rectangle x:Name="rectangle_Copy1" Fill="{TemplateBinding BorderBrush}" Stroke="{x:Null}" Margin="2,1,1,1" Opacity="0.3"/>
							<SketchControls:SketchRectangleSL x:Name="borderRightEnabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{x:Null}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}" Margin="0"/>
							<SketchControls:SketchRectangleSL x:Name="borderRightDisabledUnselected" Style="{StaticResource Rectangle-Sketch}" Background="{StaticResource DisabledBackground-Sketch}" Margin="0" Visibility="Collapsed" BorderBrush="{StaticResource DisabledBorder-Sketch}" Foreground="{StaticResource DisabledForeground-Sketch}"/>
							<ContentControl x:Name="HeaderRightUnselected" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="6,6,6,3" VerticalAlignment="{TemplateBinding VerticalAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" IsTabStop="False"/>
						</Grid>
						<Border x:Name="FocusVisualElement" Margin="-1" IsHitTestVisible="false" Visibility="Collapsed" BorderBrush="#FF6DBDD1" BorderThickness="1" CornerRadius="3,3,0,0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>

	<!-- Sketch TabControl -->
	<Style x:Key="TabControl-Sketch" TargetType="controls:TabControl">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Value="{StaticResource BaseBackground-Sketch}" Property="Background"/>
		<Setter Value="{StaticResource BaseBorder-Sketch}" Property="BorderBrush"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="5"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:TabControl">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualTop" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualBottom" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualLeft" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualRight" Storyboard.TargetProperty="(UIElement.Opacity)">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentTop" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentBottom" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentLeft" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentRight" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.5"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Grid x:Name="TemplateTop" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelTop" Margin="2,2,2,-1" Canvas.ZIndex="1"/>
							<Grid MinHeight="10" MinWidth="10" Grid.Row="1">
								<SketchControls:SketchRectangleSL Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
								<ContentPresenter x:Name="ContentTop" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="6" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
							</Grid>
							<Border x:Name="DisabledVisualTop" IsHitTestVisible="False" Opacity="0" Grid.Row="1" Grid.RowSpan="2" Canvas.ZIndex="1" Background="#8CFFFFFF" CornerRadius="0,0,3,3"/>
						</Grid>
						<Grid x:Name="TemplateBottom" Visibility="Collapsed">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="Auto"/>
							</Grid.RowDefinitions>
							<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelBottom" Margin="2,-1,2,2" Grid.Row="1" Canvas.ZIndex="1"/>
							<Grid MinHeight="10" MinWidth="10">
								<SketchControls:SketchRectangleSL Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
								<ContentPresenter x:Name="ContentBottom" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
							</Grid>
							<Border x:Name="DisabledVisualBottom" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="#8CFFFFFF" CornerRadius="3,3,0,0"/>
						</Grid>
						<Grid x:Name="TemplateLeft" Visibility="Collapsed">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition Width="*"/>
							</Grid.ColumnDefinitions>
							<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelLeft" Margin="2,2,-1,2" Canvas.ZIndex="1"/>
							<Grid MinHeight="10" MinWidth="10" Grid.Column="1">
								<SketchControls:SketchRectangleSL Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
								<ContentPresenter x:Name="ContentLeft" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
							</Grid>
							<Border x:Name="DisabledVisualLeft" IsHitTestVisible="False" Opacity="0" Grid.Column="1" Canvas.ZIndex="1" Background="#8CFFFFFF" CornerRadius="0,3,3,0"/>
						</Grid>
						<Grid x:Name="TemplateRight" Visibility="Collapsed">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="Auto"/>
							</Grid.ColumnDefinitions>
							<System_Windows_Controls_Primitives:TabPanel x:Name="TabPanelRight" Margin="-1,2,2,2" Grid.Column="1" Canvas.ZIndex="1"/>
							<Grid MinHeight="10" MinWidth="10">
								<SketchControls:SketchRectangleSL Style="{StaticResource Rectangle-Sketch}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Foreground="{TemplateBinding Foreground}"/>
								<ContentPresenter x:Name="ContentRight" Cursor="{TemplateBinding Cursor}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalAlignment}"/>
							</Grid>
							<Border x:Name="DisabledVisualRight" Margin="0" IsHitTestVisible="False" Opacity="0" Canvas.ZIndex="1" Background="#8CFFFFFF" CornerRadius="3,0,0,3"/>
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
	</Style>

	<!-- Title Center Sketch TextBlock -->
	<Style x:Key="TitleCenter-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Title Center">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="FontSize" Value="40"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
	</Style>

	<!-- Title Left Sketch TextBlock -->
	<Style x:Key="TitleLeft-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Title Left">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="FontSize" Value="40"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Left"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<!-- Title Right Sketch TextBlock -->
	<Style x:Key="TitleRight-Sketch" TargetType="TextBlock" d:StyleDefaultContent="Title Right">
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
		<Setter Property="FontSize" Value="40"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="TextAlignment" Value="Right"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
	</Style>

	<!-- Basic Sketch TextBox -->
	<Style x:Key="BasicTextBox-Sketch" TargetType="TextBox">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Background" Value="{StaticResource BaseBackground-Sketch}"/>
		<Setter Property="Foreground" Value="{StaticResource BaseForeground-Sketch}"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderBrush" Value="{StaticResource BaseBorder-Sketch}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TextBox">
					<Grid x:Name="RootElement">
						<vsm:VisualStateManager.VisualStateGroups>
							<vsm:VisualStateGroup x:Name="CommonStates">
								<vsm:VisualState x:Name="Normal"/>
								<vsm:VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Over" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Disabled1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Normal1" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="ContentElement" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="0.4"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="ReadOnly">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ReadOnlyVisualElement" Storyboard.TargetProperty="Opacity">
											<SplineDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
							<vsm:VisualStateGroup x:Name="FocusStates">
								<vsm:VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Focus" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</vsm:VisualState>
								<vsm:VisualState x:Name="Unfocused">
									<Storyboard/>
								</vsm:VisualState>
							</vsm:VisualStateGroup>
						</vsm:VisualStateManager.VisualStateGroups>
						<Grid x:Name="Border" Opacity="1">
							<SketchControls:SketchRectangleSL x:Name="Normal1" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1" Foreground="{TemplateBinding Foreground}"/>
							<SketchControls:SketchRectangleSL x:Name="Over" BorderBrush="{StaticResource BaseBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<SketchControls:SketchRectangleSL x:Name="Focus" BorderBrush="{StaticResource FocusedBorder-Sketch}" Background="{StaticResource MouseOverBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<SketchControls:SketchRectangleSL x:Name="Disabled1" BorderBrush="{StaticResource DisabledBorder-Sketch}" Background="{StaticResource BaseBackground-Sketch}" Opacity="0" SegmentLength="8" SegmentOffset="0.12" SegmentVariance="0.1"/>
							<Grid>
								<Border x:Name="ReadOnlyVisualElement" Opacity="0" Background="#72F7F7F7"/>
								<Border x:Name="MouseOverBorder" BorderBrush="Transparent" BorderThickness="1">
									<ScrollViewer Style="{StaticResource ScrollViewer-Sketch2}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" BorderBrush="{x:Null}" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Disabled" x:Name="ContentElement" BorderThickness="0" IsTabStop="False" Padding="{TemplateBinding Padding}" Margin="2"/> 
								</Border>
							</Grid>
						</Grid>
						<Border x:Name="DisabledVisualElement" IsHitTestVisible="False" Opacity="0" Background="#A5F7F7F7" BorderBrush="#A5F7F7F7" BorderThickness="{TemplateBinding BorderThickness}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontFamily" Value="{StaticResource FontFamily-Sketch}"/>
		<Setter Property="FontSize" Value="{StaticResource SizeDouble-Sketch}"/>
		<Setter Property="FontWeight" Value="{StaticResource FontWeight-Sketch}"/>
	</Style>
	
	<!-- Sketch TextBox -->
	<Style x:Key="TextBox-Sketch" TargetType="TextBox" BasedOn="{StaticResource BasicTextBox-Sketch}"/>

</ResourceDictionary>